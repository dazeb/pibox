server {
    listen 443 ssl;
    server_name localhost;

    ssl_certificate     /opt/rtorrent/ssl.crt;
    ssl_certificate_key /opt/rtorrent/ssl.key;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    root /var/www/;
    autoindex on;
    auth_basic "Restricted";
    auth_basic_user_file "/opt/rtorrent/.htpasswd";

    # PHP =====================================================================

    location ~ \.php$ {
        try_files $uri =404;
        include fastcgi_params;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
    }

    # CAKEBOX =================================================================

    location /cakebox {
        rewrite ^/cakebox(/.*)$ $1 break;
        proxy_pass http://127.0.0.1:81;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect off;
    }

    #alias for download and streaming
    location /access/ {
        alias /opt/rtorrent/share/;
        allow all;
        satisfy any;
        add_header Content-Disposition "attachment";
    }

    # H5AI ====================================================================

    location /downloads {
        index  /_h5ai/server/php/index.php;
    }

    # RPC to rtorrent =========================================================

    location /RPC2 {
        include scgi_params;
        scgi_param SCRIPT_NAME /RPC2;
        scgi_pass 127.0.0.1:5000;
    }
}

server {
        listen 81;
        server_name _;

        # only the proxy
        allow 127.0.0.1;
        deny all;

        root /var/www/cakebox/public/;

        access_log /var/log/nginx/cakebox-access.log;
        error_log  /var/log/nginx/cakebox-error.log;

        #site root is redirected to the app boot script
        location = / {
            try_files @site @site;
        }

        #all other locations try other files first and go to our front controller if none of them exists
        location / {
            try_files $uri $uri/ @site;
        }

        #return 404 for all php files as we do have a front controller
        location ~ \.php$ {
            return 404;
        }

        #main configuration
        location @site {
            fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
            include fastcgi_params;
            fastcgi_param  SCRIPT_FILENAME $document_root/index.php;
            ## use debug instead of production to get more log
            fastcgi_param APPLICATION_ENV production;
            ## fastcgi_param HTTPS on;
        }
}

